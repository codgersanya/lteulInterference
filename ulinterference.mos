#This script uses avg.py -for UlInterference calculation.
#avg.py must be placed to the same directory as this script.
#The path for the files must be set under "Initial variables" in both scripts.
#Since python works from scripting-vm only, you need to enter to that first.
#
#To enter to scripting-vm on ENM do as follows:
#
#Option-a)
#Launch "Shell Terminal on Scripting" from ENM GUI.
#Enter the node:
#amos <nodename>
#run this script:
#runx ulinterference.mos
#
#Option-b)
#You can enter to scripting-vm via your own ssh-terminal (e.g. Mobaterm):
#To find out the IP-address of the scripting-vm, launch "Shell Terminal on Scripting" from ENM GUI.
#Check the IP-address of the scripting-vm by: "hostname -i" from "Shell Terminal on Scripting" on ENM GUI.
#From your own ssh-terminal on your PC ssh to scripting-vm:
#ssh <IP of scripting-vm>
#use your ENM-pw!
#Enter the node:
#amos <nodename>
#run this script:
#runx ulinterference.mos
#
#Note: you enter to your amos-vm by default -normally. ssh from the amos-vm to the scripting-vm works usually.
#Note: You may want to add a new line to your .moshellrc -to run this script by a simple command e.g:
#if your files (ulinterference.mos and avg.py) are located in ~/scripts
#and you add the following to your .moshellrc:
#alias intf runx ~/scripts/ulinterference.mos
#then you can call the script using "intf" from your amos/moshell.


#*********Initial variables***************************
unset all
!rm -r /home/shared/pszaraz/lteulInterference/*.*
!mkdir /home/shared/pszaraz/lteulInterference
$path = /home/shared/pszaraz/lteulInterference
$path_for_scripts = /home/shared/pszaraz/szkriptek

#**********Initial variables ends**********************

!echo '*****************************************************************' >> $path/header.txt
!echo '***LTE-uplink interference report per Cell, Carrier and RfPort:**' >> $path/header.txt
!echo '*****************************************************************' >> $path/header.txt


lt all

func findcell
	mr EutranCellFDD
	ma EutranCellFDD ^EutranCellFDD= sectorCarrierRef $SectorCarrier
	for $mo in EutranCellFDD
		$EutranCellFDDrdn = rdn($mo)
	done
endfunc

func fetchavg
	$lineContent = testfile($path/avg.txt)
	if $nr_of_lines > 0
		$lineContent = readfile($path/avg.txt)
		$avg = $lineContent[1]
	else
		$avg = "Carrier_disabled"
	fi
endfunc

func get_PmUlInterferenceReport
	l+ $path/raw.txt
	pget $PmUlInterferenceReport
	l-
endfunc

func PmUlInterferenceReport
	mr PmUlInterferenceReport
	ma PmUlInterferenceReport $SectorCarrier,PmUlInterferenceReport
	for $mo in PmUlInterferenceReport
		$PmUlInterferenceReport = ldn($mo)
		get $PmUlInterferenceReport rfBranchRxRef > $rfBranchRxRef
		if $rfBranchRxRef >= 0
			get $rfBranchRxRef rfPortRef > $rfPort
			get_PmUlInterferenceReport
			!python $path_for_scripts/avg.py
			!rm -r $path/raw.txt
			!rm -r $path/raw2.txt
			fetchavg
			!echo '$EutranCellFDDrdn $SectorCarrier $rfPort Interference= $avg dBm' >> $path/result.txt
			!rm -r $path/avg.txt
		fi
	done
endfunc

mr SectorCarrier
ma SectorCarrier ^SectorCarrier
for $mo in SectorCarrier
	$SectorCarrier = ldn($mo)
	findcell
	PmUlInterferenceReport
done

!cat $path/header.txt
!cat $path/result.txt